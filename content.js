(function() {
    'use strict';
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Å–ø–æ–π–ª–µ—Ä–∞
    function createSpoiler(wikiElement) {
        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–µ —Å—Ç–∏–ª–∏ –¥–ª—è –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è
        const originalStyles = {
            display: wikiElement.style.display,
            visibility: wikiElement.style.visibility
        };
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è —Å–ø–æ–π–ª–µ—Ä–∞
        const spoilerContainer = document.createElement('div');
        spoilerContainer.className = 'wiki-spoiler-container';
        
        // –°–æ–∑–¥–∞–µ–º –∫–Ω–æ–ø–∫—É —Å–ø–æ–π–ª–µ—Ä–∞
        const spoilerButton = document.createElement('button');
        spoilerButton.className = 'wiki-spoiler-button';
        spoilerButton.innerHTML = `
            <span>üìÅ Content (click to show)</span>
            <span class="spoiler-arrow">‚ñº</span>
        `;
        
        // –°–æ–∑–¥–∞–µ–º –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä –¥–ª—è –∫–æ–Ω—Ç–µ–Ω—Ç–∞
        const spoilerContent = document.createElement('div');
        spoilerContent.className = 'wiki-spoiler-content';
        
        // –ü–µ—Ä–µ–º–µ—â–∞–µ–º —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ wikiElement –≤ —Å–ø–æ–π–ª–µ—Ä
        while (wikiElement.firstChild) {
            spoilerContent.appendChild(wikiElement.firstChild);
        }
        
        // –î–æ–±–∞–≤–ª—è–µ–º —ç–ª–µ–º–µ–Ω—Ç—ã –≤ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä
        spoilerContainer.appendChild(spoilerButton);
        spoilerContainer.appendChild(spoilerContent);
        
        // –ó–∞–º–µ–Ω—è–µ–º –æ—Ä–∏–≥–∏–Ω–∞–ª—å–Ω—ã–π —ç–ª–µ–º–µ–Ω—Ç –Ω–∞ —Å–ø–æ–π–ª–µ—Ä
        wikiElement.parentNode.replaceChild(spoilerContainer, wikiElement);
        
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ –∫–Ω–æ–ø–∫—É
        spoilerButton.addEventListener('click', function() {
            const isVisible = spoilerContent.classList.contains('visible');
            const arrow = this.querySelector('.spoiler-arrow');
            
            if (isVisible) {
                spoilerContent.classList.remove('visible');
                arrow.classList.remove('rotated');
                this.querySelector('span').textContent = 'üìÅ Content (click to show)';
            } else {
                spoilerContent.classList.add('visible');
                arrow.classList.add('rotated');
                this.querySelector('span').textContent = 'üìÇ Content (click to hide)';
            }
        });
        
        return spoilerContainer;
    }
    
    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–∏—Å–∫–∞ –∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ div.wiki
    function processWikiElements() {
        const wikiElements = document.querySelectorAll('div.note div.wiki');
        
        if (wikiElements.length > 0) {
            console.log(`–ù–∞–π–¥–µ–Ω–æ ${wikiElements.length} —ç–ª–µ–º–µ–Ω—Ç–æ–≤ div.wiki`);
            
            wikiElements.forEach((element, index) => {
                console.log(`–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç ${index + 1}`);
                createSpoiler(element);
            });
        }
    }
    
    // –ó–∞–ø—É—Å–∫–∞–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø—Ä–∏ –∑–∞–≥—Ä—É–∑–∫–µ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
    if (document.readyState === 'complete') {
        document.addEventListener('DOMContentLoaded', processWikiElements);
    } else {
        processWikiElements();
    }
    
    // –¢–∞–∫–∂–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –¥–∏–Ω–∞–º–∏—á–µ—Å–∫–∏ –ø–æ–¥–≥—Ä—É–∂–∞–µ–º—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç
    const observer = new MutationObserver(function(mutations) {
        mutations.forEach(function(mutation) {
            if (mutation.addedNodes.length) {
                mutation.addedNodes.forEach(function(node) {
                    if (node.nodeType === 1) { // Element node
                        const wikiElements = node.querySelectorAll ? 
                            node.querySelectorAll('div.note div.wiki') : [];
                        
                        if (wikiElements.length > 0) {
                            wikiElements.forEach(createSpoiler);
                        }
                        
                        // –ï—Å–ª–∏ —Å–∞–º –¥–æ–±–∞–≤–ª–µ–Ω–Ω—ã–π node —è–≤–ª—è–µ—Ç—Å—è div.wiki
                        if (node.matches && node.matches('div.note div.wiki')) {
                            createSpoiler(node);
                        }
                    }
                });
            }
        });
    });
    
    // –ù–∞—á–∏–Ω–∞–µ–º –Ω–∞–±–ª—é–¥–µ–Ω–∏–µ –∑–∞ –∏–∑–º–µ–Ω–µ–Ω–∏—è–º–∏ DOM
    observer.observe(document.body, {
        childList: true,
        subtree: true
    });
    
})();